/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

@RunWith(Parameterized.class)
public class AppTest {
	
	/* Test cases
	(DD/MM/YYYY)
	1. 02/06/1983 - 22/06/1983: 19 days 
	2. 04/07/1984 - 25/12/1984: 173 days 
	3. 03/01/1989 - 03/08/1983: 1979 days 
	*/
    @Parameters(name = "{index}: {0} - {1}")
    public static Iterable<TestCase> data() {
        return Arrays.asList(new TestCase[] { 
        		new TestCase("02/06/1983", "22/06/1983", 19),
        		new TestCase("04/07/1984", "25/12/1984", 173),
        		new TestCase("03/01/1989", "03/08/1983", 1979)
           });
    }
    
    private TestCase testCase;
    public AppTest(TestCase tc) {
    	this.testCase = tc;
    }

    @Test
    public void tryTestCases() {
   		MyDate fromDate = MyDate.of(testCase.fromDateString);
   		MyDate toDate = MyDate.of(testCase.toDateString);
   		// subtract one here because our epochDays calculation includes the end day
   		// which makes sense for an epoch calculation but isn't the spec for this test
   		Integer daysDifference = Math.abs(toDate.minus(fromDate).getEpochDays() - 1);
   		assertEquals(daysDifference, testCase.expectedDays);
    }

    
    private static class TestCase {
    	// For domain objects fields would be private and getters and setters provided (where appropriate)
    	// but for DTOs and dumb structs that approach adds no value
    	public String fromDateString;
    	public String toDateString;
    	public Integer expectedDays;
    	
    	public TestCase(String fromDate, String toDate, Integer expectedDays) {
    		this.fromDateString = fromDate;
    		this.toDateString = toDate;
    		this.expectedDays = expectedDays;
    	}

		@Override
		public String toString() {
			return "TestCase [fromDateString=" + fromDateString + ", toDateString=" + toDateString + ", expectedDays="
					+ expectedDays + "]";
		}
    	
    	
    }
}

